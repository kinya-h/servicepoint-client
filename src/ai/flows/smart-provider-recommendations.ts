// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Provides AI-suggested service provider recommendations based on user needs and preferences.
 *
 * @exports recommendProviders - A function that takes user input and returns a list of recommended service providers.
 * @exports RecommendProvidersInput - The input type for the recommendProviders function.
 * @exports RecommendProvidersOutput - The output type for the recommendProviders function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendProvidersInputSchema = z.object({
  serviceType: z.string().describe('The type of service requested (e.g., plumbing, cleaning, tutoring).'),
  location: z.string().describe('The location where the service is needed (e.g., city, address).'),
  dateTime: z.string().describe('The date and time the service is requested.'),
  preferences: z.string().optional().describe('Any specific preferences or requirements for the service provider.'),
});
export type RecommendProvidersInput = z.infer<typeof RecommendProvidersInputSchema>;

const RecommendProvidersOutputSchema = z.object({
  providers: z.array(
    z.object({
      name: z.string().describe('The name of the service provider.'),
      description: z.string().describe('A short description of the service provider and their services.'),
      contactInfo: z.string().describe('Contact information for the service provider.'),
    })
  ).describe('A list of recommended service providers.'),
});
export type RecommendProvidersOutput = z.infer<typeof RecommendProvidersOutputSchema>;

export async function recommendProviders(input: RecommendProvidersInput): Promise<RecommendProvidersOutput> {
  return recommendProvidersFlow(input);
}

const recommendProvidersPrompt = ai.definePrompt({
  name: 'recommendProvidersPrompt',
  input: {schema: RecommendProvidersInputSchema},
  output: {schema: RecommendProvidersOutputSchema},
  prompt: `You are a recommendation system designed to suggest service providers to users based on their needs and preferences.

  Based on the following information, provide a list of service providers that would be a good fit for the user.

  Service Type: {{{serviceType}}}
  Location: {{{location}}}
  Date and Time: {{{dateTime}}}
  Preferences: {{{preferences}}}

  Please provide a list of service providers with their name, a short description, and contact information.
  Ensure the service providers are relevant to the service type and available in the specified location.
  The response should be formatted as a JSON object that matches the RecommendProvidersOutputSchema schema.
  `,
});

const recommendProvidersFlow = ai.defineFlow(
  {
    name: 'recommendProvidersFlow',
    inputSchema: RecommendProvidersInputSchema,
    outputSchema: RecommendProvidersOutputSchema,
  },
  async input => {
    const {output} = await recommendProvidersPrompt(input);
    return output!;
  }
);
